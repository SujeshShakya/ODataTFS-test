{"Name":"DSoft DSGridView","Id":206,"Alias":"dsgridview","Description":"DSGridView is a simple customisable data grid control for you to use in your mobile applications. \n\n## Features\n\n* Customisable themes\n* Works on iPhone and iPad\n* Support for standard .Net DataSet and DataTable objects\n* Lightweight and simple to use\n* Support for Hot-Swapping of DataTables in a DataSet\n* Column sorting\n* Events for Row and Cell selection\n* Support for Row and Cell Double Tap\n* Works from an XIB, as a view or a view controller\n* Image cells\n\n\n## Usage\n\nA DSGridView can be added to a view or view controller in a few simple steps\n\n**Create DataSource**\n\nFirst create the data source object to use with the data grid\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\t\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t//create the datatable object and set a name\n\t\tvar aDataSource = new DSDataTable(\"ADT\");\n\t\t//add a column\n\t\tvar dc1 = new DSDataColumn(\"Title\");\n\t\tdc1.Caption = \"Title\";\n\t\tdc1.ReadOnly = true;\n\t\tdc1.DataType = typeof(String);\n\t\tdc1.AllowSort = true;\n\t\tdc1.Width = ColumnsDefs[aKey];\n\t\t\n\t\taDataSource.Columns.Add(dc1);\n\t\t   \n\t\t//add a row to the datatable\n\t\tvar dr = new DSDataRow();\n\t\tdr[\"ID\"] = loop;\n\t\tdr[\"Title\"] = @\"Test\";\n\t\tdr[\"Description\"] = @\"Some description would go here\";\n\t\tdr[\"Date\"] = DateTime.Now.ToShortDateString();\n\t\tdr[\"Value\"] = \"10000.00\";\n\t\t\n\t\t//set the value as an image\n\t\tdr[\"Image\"] =  UIImage.FromFile(\"first.png\")\n\t\t\n\t\taDataSource.Rows.Add(dr); \n\t\t\n\t\t...\n\t}\n\t\n\n**Create Grid View**\n\nCreate the grid view as with any normal iOS View and then set the datasource of the DSGridView object.\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t...\n\t\t\n\t\t//Create the grid view, assign the datasource and add the view as a subview\n\t\tvar aGridView = new DSGridView(new RectangleF(0,0,1024,768));\n\t\t\n\t\t//assign the datatsource\n\t\taGridView.DataSource = aDataSouce;\n\t\t\n\t\t//add to view\n\t\tthis.View.AddSubview(aGridView);\n\t        \n\t}\n\n**Register for events**\n\nOnce the grid is created you can register for the selection events\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t...\n\t\t        \n\t\t// Add handlers for single and double tap on each cell\n\t\taGridView.OnSingleCellTap += (DSGridCellView sender) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\taGridView.OnDoubleCellTap += (DSGridCellView sender) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\t//single row selected\n\t\taGridView.OnRowSelect += (DSGridRowView sender, DSDataRow Row) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\t//row double tap\n\t\taGridView.OnRowDoubleTapped += (DSGridRowView sender, DSDataRow Row) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t        \n\t}\n\n## Release Notes\n\n**1.1**\n\n* Added support for images in cells\n* Added ability to adjust the tap delay for a single tap when double tap is enabled by setting DSGridView.DoubleTapTimeout\n* Fixed drawing bug which left cells from a previous dataset/table visible if the new one had less columns.\n\n\n\n**Trial**\n\nThe trial is fully functionally however a popup message is shown on the first click of a row and then every five subsequent clicks.  The full version has this restriction removed.\n\nScreenshots created with [PlaceIt](http://placeit.breezi.com/) and may contain simulated functionality not included in the DSGridView.\n","Version":"1.1","Summary":"A lightweight and simple-to-use data grid for iPhone and iPad","QuickStart":"A DSGridView can be added to a view or view controller in a few simple steps\n\n**Create DataSource**\n\nFirst create the data source object to use with the data grid\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\t\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t//create the datatable object and set a name\n\t\tvar aDataSource = new DSDataTable(\"ADT\");\n\t\t//add a column\n\t\tvar dc1 = new DSDataColumn(\"Title\");\n\t\tdc1.Caption = \"Title\";\n\t\tdc1.ReadOnly = true;\n\t\tdc1.DataType = typeof(String);\n\t\tdc1.AllowSort = true;\n\t\tdc1.Width = ColumnsDefs[aKey];\n\t\t\n\t\taDataSource.Columns.Add(dc1);\n\t\t   \n\t\t//add a row to the datatable\n\t\tvar dr = new DSDataRow();\n\t\tdr[\"ID\"] = loop;\n\t\tdr[\"Title\"] = @\"Test\";\n\t\tdr[\"Description\"] = @\"Some description would go here\";\n\t\tdr[\"Date\"] = DateTime.Now.ToShortDateString();\n\t\tdr[\"Value\"] = \"10000.00\";\n\t\t\n\t\t//set the value as an image\n\t\tdr[\"Image\"] =  UIImage.FromFile(\"first.png\")\n\t\t\n\t\t    \t\n\t\taDataSource.Rows.Add(dr); \n\t\t\n\t\t\n\t\t...\n\t}\n\t\n\nBoth DSDataSet and DSDataTable have constuctors that will take their .Net counterparts(DataSet and DataTable) as parameters.\n\n\n**Create Grid View**\n\nCreate the grid view as with any normal iOS View and then set the datasource of the DSGridView object.\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\t\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t//create the datatable object and set a name\n\t\tvar aDataSource = new DSDataTable(\"ADT\");\n\t\t\n\t\t//add a column\n\t\tvar dc1 = new DSDataColumn(\"Title\");\n\t\tdc1.Caption = \"Title\";\n\t\tdc1.ReadOnly = true;\n\t\tdc1.DataType = typeof(String);\n\t\tdc1.AllowSort = true;\n\t\tdc1.Width = ColumnsDefs[aKey];\n\t\t\n\t\taDataSource.Columns.Add(dc1);\n\t\t\n\t\t//add a row to the datatable\n\t\tvar dr = new DSDataRow();\n\t\tdr[\"ID\"] = loop;\n\t\tdr[\"Title\"] = @\"Test\";\n\t\tdr[\"Description\"] = @\"Some description would go here\";\n\t\tdr[\"Date\"] = DateTime.Now.ToShortDateString();\n\t\tdr[\"Value\"] = \"10000.00\";    \t\n\t\taDataSource.Rows.Add(dr); \n\t\t\n\t\t//Create the grid view, assign the datasource and add the view as a subview\n\t\tvar aGridView = new DSGridView(new RectangleF(0,0,1024,768));\n\t\taGridView.DataSource = aDataSouce;\n\t\tthis.View.AddSubview(aGridView);\n\t        \n\t}\n\nYou can also use the DSGridViewController class to load the grid automatically into a Viewcontroller.  \n\n\n\n**Register for events**\n\nOnce the grid is created you can register for the selection events.\n\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic override void ViewDidLoad ()\n\t{\n\t\t//create the datatable object and set a name\n\t\tvar aDataSource = new DSDataTable(\"ADT\");\n\t\t\n\t\t//add a column\n\t\tvar dc1 = new DSDataColumn(\"Title\");\n\t\tdc1.Caption = \"Title\";\n\t\tdc1.ReadOnly = true;\n\t\tdc1.DataType = typeof(String);\n\t\tdc1.AllowSort = true;\n\t\tdc1.Width = ColumnsDefs[aKey];\n\t\t\n\t\taDataSource.Columns.Add(dc1);\n\t\t   \n\t\t//add a row to the datatable\n\t\tvar dr = new DSDataRow();\n\t\tdr[\"ID\"] = loop;\n\t\tdr[\"Title\"] = @\"Test\";\n\t\tdr[\"Description\"] = @\"Some description would go here\";\n\t\tdr[\"Date\"] = DateTime.Now.ToShortDateString();\n\t\tdr[\"Value\"] = \"10000.00\";    \t\n\t\taDataSource.Rows.Add(dr); \n\t\t\n\t\t//Create the grid view, assign the datasource and add the view as a subview\n\t\tvar aGridView = new DSGridView(new RectangleF(0,0,1024,768));\n\t\taGridView.DataSource = aDataSouce;\n\t\tthis.View.AddSubview(aGridView);\n\t\t        \n\t\t// Add handlers for single and double tap on each cell\n\t\taGridView.OnSingleCellTap += (DSGridCellView sender) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\taGridView.OnDoubleCellTap += (DSGridCellView sender) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\t//single row selected\n\t\taGridView.OnRowSelect += (DSGridRowView sender, DSDataRow Row) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t\t\t\n\t\t//row double tap\n\t\tgrdView.OnRowDoubleTapped += (DSGridRowView sender, DSDataRow Row) =\u003e \n\t\t{\n\t\t\t//do something\n\t\t};\n\t        \n\t}\n\n** DataTable Hot-Swapping **\n\nIf you provide a DSDataSet object as the datasource for the grid you can use hot-swapping to quickly switch between the DSDataTables objects within it.\n\nThe DSGridView has a property called TableName for the purpose. Setting the property will switch the data to the specified DataTable and then reload the gridview with the new data.\n\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic override void ViewDidLoad ()\n\t{\n\t\tvar aDataSet = new DSDataSet();\n\t\taDataSet.Tables.Add(new DSDataTable(\"ADT1\"));\n\t\taDataSet.Tables.Add(new DSDataTable(\"ADT2\"));\n\t\t\n\t\taGridView.DataSource = aDataSet;\n\t\t\n\t\t//set to the first datatable\n\t\taGridView.TableName = ((DSDataSet) aDataSet).Tables[0].Name;\n\t}\n\t\n\tpublic void OnClickSwitchDataTable()\n\t{\n\t\taGridView.TableName = \"ADT2\";\n\t}\n\n\n** Themes and styling**\n\nYou can create a custom theme by subclassing either an existing them(such as DSGridViewDefaultTheme) or creating a new theme based on the the DSGridViewTheme abstract class.\n\nTo change the look of the grid simply override the property that you want to change and set it to the values you want to use.\n\nAs an example to change the color of the default header you could simple create a new Class called AGridViewTheme, as a subclass of DSGridViewDefaultTheme, and override the HeaderColor property.\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic class AGridTheme : DSGridViewDefaultTheme\n\t{\n\t\tpublic override MonoTouch.UIKit.UIColor HeaderColor \n\t\t{\n\t\t\tget \n\t\t\t{\n\t\t\t\treturn UIColor.LightGray();\n\t\t\t}\n\t\t}\n\t}\n\nFor background or selection properties you can also use UIColor objects built with pattern images.\n\nThis is an example of the above AGridTheme class but returning a UIColor object using an image instead.\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic class AGridTheme : DSGridViewDefaultTheme\n\t{\n\t\tpublic override MonoTouch.UIKit.UIColor HeaderColor \n\t\t{\n\t\t\tget \n\t\t\t{\n\t\t\t\treturn UIColor.FromPatternImage(new UIImage(\"header.png\"));\n\t\t\t}\n\t\t}\n\t}\n\n\nYou can then use the new Theme class by setting the CurrentTheme static proprerty on the DSGridViewTheme class\n\n\n\tusing DSoft.Datatypes.Grid.Data;\n\tusing DSoft.UI.Grid;\n\tpublic override void ViewDidLoad ()\n\t{\n\t\tDSGridViewTheme.CurrentTheme = new AGridTheme();\n\t}\n\n\n\n\n","Hash":"4763e4ba8c506def77acc596d8077e18","TargetPlatforms":["ios"],"TrialHash":"333d0c8c9beceb6de4a62ef048d292b5"}